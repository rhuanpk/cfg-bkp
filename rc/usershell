# >>> Aliases <<<

# Any's.
alias cdlx='cd $PK_LOAD_LINUX'
alias cdbk='cd $PK_LOAD_CFGBKP'

# Docker.
alias docker-ps="docker ps -a --format 'table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}'"
alias docker-remove-all-containers='docker rm -f `docker container ls -aq`'
alias docker-remove-all-volumes='docker volume rm `docker volume ls -q`'
alias docker-ip="docker inspect -f '{{.NetworkSettings.IPAddress}}'"
alias docker-service="docker service ls --format 'table {{.ID}}\t{{.Name}}\t{{.Mode}}\t{{.Replicas}}\t{{.Ports}}'"

# >>> Functions <<<

# Git.
git-submodule-recreate() {
	sed -nE 's/^[[:blank:]]+path = (.*)/\1/p' ./.gitmodules | \
		xargs rm -rf && \
	git submodule init && \
	git submodule update --remote
}

git-submodule-setbranch() {
	branch="${1:-main}"
	for submodule in `sed -nE 's/\[submodule "(.*)"\]/\1/p' ./.gitmodules`; do
		git submodule set-branch --branch $branch "${submodule}"
	done
}

# Docker.
docker-remove-dangling-volumes() {
	for volume in `docker volume ls -qf dangling=true`; do
		rm -rf /var/lib/docker/volumes/"$volume"
	done
}

docker-remove-dangling-images() {
	docker image rm -f $(
		docker images -af 'dangling=true' | \
			grep -F '<none>' | \
			awk '{print $3}'
	)
}

docker-mysql-adminer() {
	docker run -d \
		--rm \
		--name adminer \
		--link mysql:db \
		-p 80:8080 \
		adminer:latest
	docker run -d \
		--rm \
		--name mysql \
		-e 'MYSQL_ROOT_PASSWORD=root' \
		-e 'MYSQL_DATABASE=db' \
		mysql:latest
}

docker-list-all() {
	commands='image container volume network service'
	for command in $commands; do
		echo -e "\n » $command «\n"; docker $command ls;
	done
}

# Golang.
go-package-start() {
	pathway=/tmp/tmp/golang
	[ -d $pathway ] && rm -rfv ${pathway:?pathway no set!}/
	mkdir -pv $pathway
	cd $pathway
	cat <<- eof > ./main.go
		package main

		func main() {

		}
	eof
	go mod init golang
	echo "pwd: `pwd`"
}
